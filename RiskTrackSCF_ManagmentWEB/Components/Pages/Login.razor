@page "/login"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject HttpClient Http
@using RiskTrackSCF_ManagmentWEB.Services
@using RiskTrackSCF_ManagmentWEB.Models
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject ProtectedSessionStorage sessionStorage
@rendermode InteractiveServer

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="position-absolute top-50 start-50 translate-middle" style="width: 100%; max-width: 400px;">
        <div class="card p-4 shadow">
            <h2 class="text-center mb-4">Login</h2>

            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <InputText @bind-Value="loginModel.Email" placeholder="Email" class="form-control" />
                </div>
                <div class="mb-3">
                    <InputText @bind-Value="loginModel.Password" placeholder="Contraseña" type="password" class="form-control" />
                </div>
                <button class="btn btn-primary w-100">Ingresar</button>

                @if (!string.IsNullOrEmpty(error))
                {
                    <div class="alert alert-danger mt-3">@error</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginModel = new();
    private string error = "";

    private async Task HandleLogin()
    {
        var result = await AuthService.LoginAsync(loginModel);

        if (result == null)
        {
            error = "Credenciales incorrectas.";
            return;
        }

        if (result.Role != "S")
        {
            error = "Acceso denegado: solo usuarios SuperAdmin pueden ingresar.";
            return;
        }

        await sessionStorage.SetAsync("authUser", result);
        Navigation.NavigateTo("/dashboard");
    }
}